from sqlalchemy.dialects import postgresql
import sqlalchemy as sa
from alembic import op
"""empty message

Revision ID: 36e355a78e81
Revises: 1d1fea43bb04
Create Date: 2020-03-03 10:12:52.105363

"""

# revision identifiers, used by Alembic.
revision = '36e355a78e81'
down_revision = '1d1fea43bb04'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()


def upgrade_():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'listener',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('uuid', sa.Unicode(), nullable=False),
        sa.Column('sync_enabled', sa.Boolean(), nullable=False),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('root_folder', sa.Unicode(), nullable=False),
        sa.Column('client_token', sa.Unicode(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified_at', sa.DateTime(), nullable=False),
        sa.Column('section_id', sa.Integer(), nullable=False),
        sa.Column('connector_id', sa.Integer(), nullable=False),
        sa.Column('created_by', sa.Integer(), nullable=False),
        sa.Column('modified_by', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['connector_id'], ['connector.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['modified_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['section_id'], ['section.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'sync_log',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('uuid', sa.Unicode(), nullable=False),
        sa.Column('sync_type', sa.Unicode(), nullable=False),
        sa.Column('status', postgresql.ARRAY(
            sa.Unicode(), dimensions=1), server_default='{}', nullable=True),
        sa.Column('description', postgresql.ARRAY(
            sa.Unicode(), dimensions=1), server_default='{}', nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified_at', sa.DateTime(), nullable=False),
        sa.Column('listener_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['listener_id'], ['listener.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.add_column(u'draft_walkthrough', sa.Column(
        'mapping_id', sa.Unicode(), nullable=True))
    op.add_column(u'playlist', sa.Column(
        'mapping_id', sa.Unicode(), nullable=True))
    op.add_column(u'section', sa.Column(
        'mapping_id', sa.Unicode(), nullable=True))
    ### end Alembic commands ###


def downgrade_():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_column(u'section', 'mapping_id')
    op.drop_column(u'playlist', 'mapping_id')
    op.drop_column(u'draft_walkthrough', 'mapping_id')
    op.drop_table('sync_log')
    op.drop_table('listener')
    ### end Alembic commands ###


def upgrade_reports():
    pass


def downgrade_reports():
    pass
