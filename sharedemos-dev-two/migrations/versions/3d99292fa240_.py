"""empty message

Revision ID: 3d99292fa240
Revises: None
Create Date: 2020-01-12 11:53:41.266469

"""

# revision identifiers, used by Alembic.
revision = '3d99292fa240'
down_revision = '3ce5690d81ae'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()


def upgrade_():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'connector',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('uuid', sa.Unicode(), nullable=False),
        sa.Column('is_enabled', sa.Boolean(), nullable=False),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('username', sa.Unicode(), nullable=False),
        sa.Column('password', sa.Unicode(), nullable=False),
        sa.Column('site_url', sa.Unicode(), nullable=False),
        sa.Column('client_name', sa.Unicode(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified_at', sa.DateTime(), nullable=False),
        sa.Column('tenant_uid', sa.Unicode(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('uuid')
    )
    op.create_table(
        'listener',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('uuid', sa.Unicode(), nullable=False),
        sa.Column('sync_enabled', sa.Boolean(), nullable=False),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('entity_id', sa.Integer(), nullable=True),
        sa.Column('entity_type', sa.Unicode(), nullable=True),
        sa.Column('repository_folder', sa.Unicode(), nullable=True),
        sa.Column('client_token', sa.Unicode(), nullable=True),
        sa.Column('connector_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['connector_id'], ['connector.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('uuid')
    )
    op.create_table(
        'sync_log',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('uuid', sa.Unicode(), nullable=False),
        sa.Column('sync_type', sa.Unicode(), nullable=False),
        sa.Column('status', sa.Unicode(), nullable=True),
        sa.Column('status_message', sa.Unicode(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified_at', sa.DateTime(), nullable=False),
        sa.Column('response', postgresql.JSON(), nullable=True),
        sa.Column('listener_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['listener_id'], ['listener.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('uuid')
    )
    ### end Alembic commands ###


def downgrade_():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sync_log')
    op.drop_table('listener')
    op.drop_table('connector')
    ### end Alembic commands ###


def upgrade_reports():
    pass


def downgrade_reports():
    pass
