"""empty message

Revision ID: 3eb85ca66889
Revises: 9842b9610e4
Create Date: 2015-09-11 09:10:56.532121

"""

# revision identifiers, used by Alembic.
revision = '3eb85ca66889'
down_revision = '9842b9610e4'
branch_labels = None
depends_on = None

from sqlalchemy.dialects import postgresql
from alembic import op
import sqlalchemy as sa


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()


def upgrade_():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.Unicode(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name'),
                    sa.UniqueConstraint('name')
                    )
    op.execute("""INSERT INTO role VALUES
               (1, 'admin', '2015-09-10'),
                (2, 'author', '2015-09-10'),
                (3, 'analyst', '2015-09-10')""")
    op.add_column(u'users', sa.Column('role_id', sa.Integer(), server_default='1', nullable=False))
    op.add_column(u'users', sa.Column('is_deleted', sa.Boolean(), server_default='false', nullable=False))
    op.add_column('users', sa.Column('email_sent', sa.Boolean(), server_default='true', nullable=False))
    op.add_column('users', sa.Column('picture_url', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('unique_user_id', sa.Unicode(), nullable=True))

    op.alter_column(u'users', 'password',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.create_unique_constraint(None, 'users', ['unique_user_id'])
    op.create_foreign_key(None, 'users', 'role', ['role_id'], ['id'])

    op.execute("UPDATE users SET role_id=1 WHERE role_id is NULL")
    op.execute(""" UPDATE users SET unique_user_id = website_leads.unique_user_id,
                picture_url = website_leads.picture_url,
                email_sent = website_leads.email_sent
                FROM website_leads WHERE users.email = website_leads.email """)

    op.drop_table('website_leads')
    ### end Alembic commands ###


def downgrade_():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('website_leads',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('unique_user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('user_name', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
                    sa.Column('picture_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
                    sa.Column('tenant_id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('email_sent', sa.BOOLEAN(), server_default=sa.text(u'true'), autoincrement=False, nullable=False),
                    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
                    sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['tenant_id'], [u'tenant.id'], name=u'website_leads_tenant_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name=u'website_leads_pkey'),
                    sa.UniqueConstraint('email', name=u'website_leads_email_key'),
                    sa.UniqueConstraint('unique_user_id', name=u'website_leads_unique_user_id_key')
                    )

    op.execute(""" INSERT INTO website_leads
                           (unique_user_id, user_name, email, picture_url, tenant_id, email_sent, created_at, modified_at)
                    SELECT users.unique_user_id, users.first_name, users.email,
                           users.picture_url, users.tenant_id, users.email_sent,
                           users.created_at, users.created_at
                    FROM users """)
    op.execute("UPDATE users SET password='-1' WHERE password is NULL")

    op.alter_column(u'users', 'password',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.drop_constraint('users_unique_user_id_key', 'users', type_='unique')
    op.drop_constraint('users_role_id_fkey', 'users', type_='foreignkey')
    op.drop_column('users', 'unique_user_id')
    op.drop_column('users', 'picture_url')
    op.drop_column('users', 'email_sent')
    op.drop_column(u'users', 'role_id')
    op.drop_column(u'users', 'is_deleted')
    op.drop_table('role')
    ### end Alembic commands ###


def upgrade_reports():
    pass


def downgrade_reports():
    pass
