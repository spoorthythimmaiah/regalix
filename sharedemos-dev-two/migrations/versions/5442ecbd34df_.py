"""empty message

Revision ID: 5442ecbd34df
Revises: 42f8fe6336e6
Create Date: 2017-03-09 12:38:34.849383

"""

# revision identifiers, used by Alembic.
revision = '5442ecbd34df'
down_revision = '42f8fe6336e6'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    ### commands auto generated by Alembic - please adjust! ###

    conn = op.get_bind()
    query = conn.execute('select icon_id, id from information where icon_id is not null')
    information_ids_list = query.fetchall()
    query = conn.execute('select icon_id, id from options where icon_id is not null')
    options_ids_list = query.fetchall()
    query = conn.execute('select icon_id, id from paths where icon_id is not null')
    paths_ids_list = query.fetchall()
    query = conn.execute('select icon_id, id from questions where icon_id is not null')
    questions_ids_list = query.fetchall()

    op.drop_constraint(u'information_icon_id_fkey', 'information', type_='foreignkey')
    op.drop_column('information', 'icon_id')
    op.add_column('information_translations', sa.Column('icon_id', sa.Integer(), nullable=True))
    op.create_foreign_key('information_translations_icon_id_fkey', 'information_translations', 'icon_library', ['icon_id'], ['id'])
    op.add_column('option_translations', sa.Column('icon_id', sa.Integer(), nullable=True))
    op.drop_constraint(u'option_translations_resource_id_fkey', 'option_translations', type_='foreignkey')
    op.create_foreign_key('option_translations_icon_id_fkey', 'option_translations', 'icon_library', ['icon_id'], ['id'])
    op.drop_column('option_translations', 'resource_id')
    op.drop_constraint(u'options_icon_id_fkey', 'options', type_='foreignkey')
    op.drop_column('options', 'icon_id')
    op.add_column('path_translations', sa.Column('icon_id', sa.Integer(), nullable=True))
    op.create_foreign_key('path_translations_icon_id_fkey', 'path_translations', 'icon_library', ['icon_id'], ['id'])
    op.drop_constraint(u'paths_icon_id_fkey', 'paths', type_='foreignkey')
    op.drop_column('paths', 'icon_id')
    op.add_column('question_translations', sa.Column('icon_id', sa.Integer(), nullable=True))
    op.create_foreign_key('question_translations_icon_id_fkey', 'question_translations', 'icon_library', ['icon_id'], ['id'])
    op.drop_constraint(u'questions_icon_id_fkey', 'questions', type_='foreignkey')
    op.drop_column('questions', 'icon_id')

    for info in information_ids_list:
        conn.execute('update information_translations set icon_id = {0} where information_id = {1};'.format(info[0], info[1]))
    for option in options_ids_list:
        conn.execute('update option_translations set icon_id = {0} where option_id = {1};'.format(option[0], option[1]))
    for path in paths_ids_list:
        conn.execute('update path_translations set icon_id = {0} where path_id = {1};'.format(path[0], path[1]))
    for question in questions_ids_list:
        conn.execute('update question_translations set icon_id = {0} where question_id = {1};'.format(question[0], question[1]))

    ### end Alembic commands ###


def downgrade_():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('questions', sa.Column('icon_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(u'questions_icon_id_fkey', 'questions', 'icon_library', ['icon_id'], ['id'])
    op.drop_constraint('question_translations_icon_id_fkey', 'question_translations', type_='foreignkey')
    op.drop_column('question_translations', 'icon_id')
    op.add_column('paths', sa.Column('icon_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(u'paths_icon_id_fkey', 'paths', 'icon_library', ['icon_id'], ['id'])
    op.drop_constraint('path_translations_icon_id_fkey', 'path_translations', type_='foreignkey')
    op.drop_column('path_translations', 'icon_id')
    op.add_column('options', sa.Column('icon_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(u'options_icon_id_fkey', 'options', 'icon_library', ['icon_id'], ['id'])
    op.add_column('option_translations', sa.Column('resource_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint('option_translations_icon_id_fkey', 'option_translations', type_='foreignkey')
    op.create_foreign_key(u'option_translations_resource_id_fkey', 'option_translations', 'resource', ['resource_id'], ['id'])
    op.drop_column('option_translations', 'icon_id')
    op.drop_constraint('information_translations_icon_id_fkey', 'information_translations', type_='foreignkey')
    op.drop_column('information_translations', 'icon_id')
    op.add_column('information', sa.Column('icon_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(u'information_icon_id_fkey', 'information', 'icon_library', ['icon_id'], ['id'])
    ### end Alembic commands ###


def upgrade_reports():
    pass


def downgrade_reports():
    pass
