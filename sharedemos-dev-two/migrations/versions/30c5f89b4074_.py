from alembic import op
import sqlalchemy as sa
"""
Revision ID: 30c5f89b4074
Revises: 4f7b187be3a9
Create Date: 2018-09-19 06:19:47.917443
"""

# revision identifiers, used by Alembic.
revision = '30c5f89b4074'
down_revision = '4f7b187be3a9'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()


def upgrade_():
    # commands auto generated by Alembic - please adjust! #
    op.create_table(
        'user_groups',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.Unicode(), nullable=False),
        sa.Column('slug', sa.Unicode(), nullable=True),
        sa.Column('description', sa.Unicode(), nullable=True),
        sa.Column('idp_entity_id', sa.Unicode(), nullable=True),
        sa.Column('idp_url', sa.Unicode(), nullable=True),
        sa.Column('idp_x509cert', sa.Text(), nullable=True),
        sa.Column('idp_first_name', sa.Unicode(), nullable=True),
        sa.Column('idp_last_name', sa.Unicode(), nullable=True),
        sa.Column('idp_username', sa.Unicode(), nullable=True),
        sa.Column('idp_email', sa.Unicode(), nullable=True),
        sa.Column('tenant_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('tenant_id', 'slug',
                            name='uq_user_group_tenant_id_slug')
    )
    op.add_column('users', sa.Column('group_id', sa.Integer(), nullable=True))
    op.create_foreign_key(
        'users_group_id_fkey',
        'users', 'user_groups', ['group_id'], ['id'])
    # end Alembic commands #


def downgrade_():
    # commands auto generated by Alembic - please adjust! #
    op.drop_constraint('users_group_id_fkey', 'users', type_='foreignkey')
    op.drop_column('users', 'group_id')
    op.drop_table('user_groups')
    # end Alembic commands #


def upgrade_reports():
    pass


def downgrade_reports():
    pass
