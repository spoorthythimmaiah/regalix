"""empty message

Revision ID: 3578e6fe8c6f
Revises: 16af01d0ee71
Create Date: 2015-08-25 07:23:37.125993

"""

# revision identifiers, used by Alembic.
revision = '3578e6fe8c6f'
down_revision = '4009d18a5711'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()


def upgrade_():
    """ commands auto generated by Alembic - please adjust! """
    op.create_foreign_key('hotspot_tenant_id_fkey', 'hotspot', 'tenant', ['tenant_id'], ['id'])
    op.create_foreign_key('icon_library_tenant_id_fkey', 'icon_library', 'tenant', ['tenant_id'], ['id'])
    op.create_foreign_key('leads_product_id_fkey', 'leads', 'section', ['product_id'], ['id'])
    op.create_foreign_key('resource_tenant_id_fkey', 'resource', 'tenant', ['tenant_id'], ['id'])
    op.create_foreign_key('section_icon_id_fkey', 'section', 'icon_library', ['icon_id'], ['id'])
    op.create_foreign_key('section_tenant_id_fkey', 'section', 'tenant', ['tenant_id'], ['id'])
    op.create_foreign_key('section_link_id_fkey', 'section', 'section', ['link_id'], ['id'])
    op.create_foreign_key('slide_tenant_id_fkey', 'slide', 'tenant', ['tenant_id'], ['id'])
    op.execute("DROP INDEX IF EXISTS user_activity_created_at_idx")
    op.execute("DROP INDEX IF EXISTS visit_activity_created_at_idx")
    op.create_foreign_key('walkthrough_section_id_fkey', 'walkthrough', 'section', ['section_id'], ['id'])
    op.create_foreign_key('walkthrough_tenant_id_fkey', 'walkthrough', 'tenant', ['tenant_id'], ['id'])
    op.create_foreign_key('walkthrough_link_id_fkey', 'walkthrough', 'walkthrough', ['link_id'], ['id'])
    op.create_foreign_key('walkthrough_draft_id_fkey', 'walkthrough', 'draft_walkthrough', ['draft_id'], ['id'])

    op.alter_column('visit_activity', 'product_id', existing_type=sa.INTEGER(), nullable=True)
    op.alter_column('visit_activity', 'section_id', existing_type=sa.INTEGER(), nullable=True)

    op.add_column('user_activity', sa.Column('country_iso_code', sa.Unicode(), nullable=True))


def downgrade_():
    op.drop_constraint('walkthrough_draft_id_fkey', 'walkthrough', type_='foreignkey')
    op.drop_constraint('walkthrough_link_id_fkey', 'walkthrough', type_='foreignkey')
    op.drop_constraint('walkthrough_tenant_id_fkey', 'walkthrough', type_='foreignkey')
    op.drop_constraint('walkthrough_section_id_fkey', 'walkthrough', type_='foreignkey')
    op.create_index('visit_activity_created_at_idx', 'visit_activity', ['created_at'], unique=False)
    op.create_index('user_activity_created_at_idx', 'user_activity', ['created_at'], unique=False)
    op.drop_constraint('slide_tenant_id_fkey', 'slide', type_='foreignkey')
    op.drop_constraint('section_link_id_fkey', 'section', type_='foreignkey')
    op.drop_constraint('section_tenant_id_fkey', 'section', type_='foreignkey')
    op.drop_constraint('section_icon_id_fkey', 'section', type_='foreignkey')
    op.drop_constraint('resource_tenant_id_fkey', 'resource', type_='foreignkey')
    op.drop_constraint('leads_product_id_fkey', 'leads', type_='foreignkey')
    op.drop_constraint('icon_library_tenant_id_fkey', 'icon_library', type_='foreignkey')
    op.drop_constraint('hotspot_tenant_id_fkey', 'hotspot', type_='foreignkey')

    conn = op.get_bind()
    query = conn.execute("select * from section where id = -1")
    section = query.fetchone()
    if not section:
        conn.execute(
            """insert into section(id, "order", tenant_id, is_hidden, is_enabled, is_deleted, created_at, modified_at) values (-1, 1, -1, false, true, true, '2015-08-28', '2015-08-28')"""
        )

    op.execute("update visit_activity set product_id=-1 where product_id is null")
    op.execute("update visit_activity set section_id=-1 where section_id is null")

    op.alter_column('visit_activity', 'product_id', existing_type=sa.INTEGER(), nullable=False)
    op.alter_column('visit_activity', 'section_id', existing_type=sa.INTEGER(), nullable=False)
    op.drop_column('user_activity', 'country_iso_code')


def upgrade_reports():
    op.create_table(
        'report_tenant',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.Unicode(), nullable=False),
        sa.Column('title', sa.Unicode(), nullable=True),
        sa.Column('domain', sa.Unicode(), nullable=False),
        sa.Column('timezone', sa.Unicode(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'topic_activity',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('tenant_id', sa.Integer(), nullable=False),
        sa.Column('from_date', sa.DateTime(), nullable=False),
        sa.Column('product', sa.String(length=255), nullable=True),
        sa.Column('section', sa.String(length=255), nullable=True),
        sa.Column('walkthrough', sa.String(length=255), nullable=True),
        sa.Column('hierarchy', postgresql.ARRAY(sa.String(length=255)), nullable=True),
        sa.Column('visit_count', sa.Integer(), nullable=False),
        sa.Column('overall_visit_count', sa.Integer(), nullable=False),
        sa.Column('completion_count', sa.Integer(), nullable=False),
        sa.Column('overall_completion_count', sa.Integer(), nullable=False),
        sa.Column('completion_rate', sa.Float(), nullable=False),
        sa.Column('overall_completion_rate', sa.Float(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['tenant_id'], ['report_tenant.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'visitors',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('tenant_id', sa.Integer(), nullable=False),
        sa.Column('from_date', sa.DateTime(), nullable=False),
        sa.Column('product', sa.String(length=255), nullable=True),
        sa.Column('site_visitors_count', sa.Integer(), nullable=False),
        sa.Column('overall_site_visitors_count', sa.Integer(), nullable=False),
        sa.Column('demo_visitors_count', sa.Integer(), nullable=False),
        sa.Column('overall_demo_visitors_count', sa.Integer(), nullable=False),
        sa.Column('signups_count', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['tenant_id'], ['report_tenant.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'visitors_geography',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('tenant_id', sa.Integer(), nullable=False),
        sa.Column('from_date', sa.DateTime(timezone=True), nullable=False),
        sa.Column('product', sa.String(length=255), nullable=True),
        sa.Column('country', sa.Unicode(), nullable=False),
        sa.Column('country_iso_code', sa.Unicode(), nullable=False),
        sa.Column('visitors_count', sa.Integer(), nullable=False),
        sa.Column('overall_visitors_count', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['tenant_id'], ['report_tenant.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'visitors_referral',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('tenant_id', sa.Integer(), nullable=False),
        sa.Column('from_date', sa.DateTime(timezone=True), nullable=False),
        sa.Column('product', sa.String(length=255), nullable=True),
        sa.Column('source', sa.Unicode(), nullable=False),
        sa.Column('visitors_count', sa.Integer(), nullable=False),
        sa.Column('overall_visitors_count', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['tenant_id'], ['report_tenant.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    """ end Alembic commands """


def downgrade_reports():
    """ commands auto generated by Alembic - please adjust! """
    op.drop_table('visitors')
    op.drop_table('topic_activity')
    op.drop_table('visitors_referral')
    op.drop_table('visitors_geography')
    op.drop_table('report_tenant')
    """ end Alembic commands """
