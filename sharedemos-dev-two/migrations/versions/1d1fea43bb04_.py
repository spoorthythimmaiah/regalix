"""empty message

Revision ID: 1d1fea43bb04
Revises: 2ad718ffc50c
Create Date: 2020-02-27 13:48:31.063848

"""

# revision identifiers, used by Alembic.
revision = '1d1fea43bb04'
down_revision = '2ad718ffc50c'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'pitch_result',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('compare_id', sa.Unicode(), nullable=False),
        sa.Column('meta_data', postgresql.JSON(), nullable=True),
        sa.Column('score', postgresql.JSON(), nullable=True),
        sa.Column('total_score', sa.Float(), nullable=True),
        sa.Column('evaluated_by', sa.Integer(), nullable=True),
        sa.Column('recording_id', sa.Integer(), nullable=False),
        sa.Column('tenant_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['evaluated_by'], ['users.id'], name=u'pitch_result_evaluated_by_fkey'),
        sa.ForeignKeyConstraint(['recording_id'], ['pitch_recording.id'], name=u'pitch_result_recording_id_fkey'),
        sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], name=u'pitch_result_tenant_id_fkey'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('compare_id', name='uq_pitch_result_compare_id')
    )
    op.drop_constraint(u'pitch_recording_evaluated_by_fkey', 'pitch_recording', type_='foreignkey')
    op.drop_column(u'pitch_recording', 'evaluated_by')
    op.drop_column(u'pitch_recording', 'score')
    ### end Alembic commands ###


def downgrade_():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column(u'pitch_recording', sa.Column('score', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column(u'pitch_recording', sa.Column('evaluated_by', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(u'pitch_recording_evaluated_by_fkey', 'pitch_recording', 'users', ['evaluated_by'], ['id'])
    op.drop_table('pitch_result')
    ### end Alembic commands ###



def upgrade_reports():
    pass


def downgrade_reports():
    pass
