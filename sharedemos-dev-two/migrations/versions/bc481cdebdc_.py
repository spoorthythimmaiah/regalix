"""empty message

Revision ID: bc481cdebdc
Revises: 4b8b73c5edfb
Create Date: 2016-01-11 20:30:19.278867

"""

# revision identifiers, used by Alembic.
revision = 'bc481cdebdc'
down_revision = '4b8b73c5edfb'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker, relationship

Session = sessionmaker()
Base = declarative_base()


class Slide(Base):

    __tablename__ = 'slide'

    id = sa.Column(sa.Integer, primary_key=True)
    order = sa.Column(sa.Integer, nullable=False)
    walkthrough_id = sa.Column(sa.Integer, sa.ForeignKey('walkthrough.id'), nullable=False)
    tenant_id = sa.Column(sa.Integer, sa.ForeignKey('tenant.id'), nullable=False)
    av_resource_id = sa.Column(sa.Integer, sa.ForeignKey('resource.id'))
    image_resource_id = sa.Column(sa.Integer, sa.ForeignKey('resource.id'))
    is_deleted = sa.Column(sa.Boolean, default=False, nullable=False)

    primary_resource_id = sa.Column(sa.Integer, sa.ForeignKey('resource.id'))
    primary_resource = relationship("Resource", foreign_keys=primary_resource_id)
    secondary_resource_id = sa.Column(sa.Integer, sa.ForeignKey('resource.id'))
    secondary_resource = relationship("Resource", foreign_keys=secondary_resource_id)


class DraftSlide(Base):

    __tablename__ = 'draft_slide'

    id = sa.Column(sa.Integer, primary_key=True)
    order = sa.Column(sa.Integer, nullable=False)
    walkthrough_id = sa.Column(sa.Integer, sa.ForeignKey('draft_walkthrough.id'), nullable=False)
    tenant_id = sa.Column(sa.Integer, sa.ForeignKey('tenant.id'), nullable=False)
    image_resource_id = sa.Column(sa.Integer, sa.ForeignKey('resource.id'))
    av_resource_id = sa.Column(sa.Integer, sa.ForeignKey('resource.id'))
    is_deleted = sa.Column(sa.Boolean, default=False, nullable=False)

    primary_resource_id = sa.Column(sa.Integer, sa.ForeignKey('resource.id'))
    primary_resource = relationship("Resource", foreign_keys=primary_resource_id)
    secondary_resource_id = sa.Column(sa.Integer, sa.ForeignKey('resource.id'))
    secondary_resource = relationship("Resource", foreign_keys=secondary_resource_id)


class Resource(Base):

    __tablename__ = 'resource'

    id = sa.Column(sa.Integer, primary_key=True)
    name = sa.Column(sa.Unicode, nullable=False)
    path = sa.Column(sa.Unicode, nullable=False)
    resource_type = sa.Column(sa.Unicode, nullable=False)

    tenant_id = sa.Column(sa.Integer, sa.ForeignKey('tenant.id'), nullable=False)


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()


def upgrade_():
    bind = op.get_bind()
    session = Session(bind=bind)

    # commands auto generated by Alembic - please adjust! #
    op.add_column('slide', sa.Column('primary_resource_id', sa.Integer(), nullable=True))
    op.add_column('slide', sa.Column('secondary_resource_id', sa.Integer(), nullable=True))
    op.add_column('draft_slide', sa.Column('primary_resource_id', sa.Integer(), nullable=True))
    op.add_column('draft_slide', sa.Column('secondary_resource_id', sa.Integer(), nullable=True))

    op.drop_constraint(u'slide_av_resource_id_fkey', 'slide', type_='foreignkey')
    op.drop_constraint(u'slide_image_resource_id_fkey', 'slide', type_='foreignkey')
    op.drop_constraint(u'draft_slide_av_resource_id_fkey', 'draft_slide', type_='foreignkey')
    op.drop_constraint(u'draft_slide_image_resource_id_fkey', 'draft_slide', type_='foreignkey')

    # Migrate Content
    draft_slides = session.query(DraftSlide).all()
    for sl in draft_slides:
        if sl.av_resource_id:
            bind.execute("update draft_slide set primary_resource_id = " + str(sl.av_resource_id) + " where id = " + str(sl.id))
            if sl.image_resource_id:
                bind.execute("update draft_slide set secondary_resource_id = " + str(sl.image_resource_id) + " where id=" + str(sl.id))
        elif sl.image_resource_id:
            bind.execute("update draft_slide set primary_resource_id = " + str(sl.image_resource_id) + " where id = " + str(sl.id))

    slides = session.query(Slide).all()
    for sl in slides:
        if sl.av_resource_id:
            bind.execute("update slide set primary_resource_id = " + str(sl.av_resource_id) + " where id = " + str(sl.id))
            if sl.image_resource_id:
                bind.execute("update slide set secondary_resource_id = " + str(sl.image_resource_id) + " where id = " + str(sl.id))
        elif sl.image_resource_id:
            bind.execute("update slide set primary_resource_id = " + str(sl.image_resource_id) + " where id = " + str(sl.id))

    op.create_foreign_key(u'fk_slide_primary_resource_id_resource', 'slide', 'resource', ['primary_resource_id'], ['id'])
    op.create_foreign_key(u'fk_slide_secondary_resource_id_resource', 'slide', 'resource', ['secondary_resource_id'], ['id'])
    op.create_foreign_key(u'fk_draft_slide_primary_resource_id_resource', 'draft_slide', 'resource', ['primary_resource_id'], ['id'])
    op.create_foreign_key(u'fk_draft_slide_secondary_resource_id_resource', 'draft_slide', 'resource',
                          ['secondary_resource_id'], ['id'])

    op.drop_column('slide', 'av_resource_id')
    op.drop_column('slide', 'image_resource_id')
    op.drop_column('draft_slide', 'av_resource_id')
    op.drop_column('draft_slide', 'image_resource_id')
    # end Alembic commands #


def downgrade_():
    bind = op.get_bind()
    session = Session(bind=bind)

    # commands auto generated by Alembic - please adjust! #
    op.add_column('slide', sa.Column('av_resource_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('slide', sa.Column('image_resource_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('draft_slide', sa.Column('av_resource_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('draft_slide', sa.Column('image_resource_id', sa.INTEGER(), autoincrement=False, nullable=True))

    op.drop_constraint(u'fk_slide_primary_resource_id_resource', 'slide', type_='foreignkey')
    op.drop_constraint(u'fk_slide_secondary_resource_id_resource', 'slide', type_='foreignkey')
    op.drop_constraint(u'fk_draft_slide_primary_resource_id_resource', 'draft_slide', type_='foreignkey')
    op.drop_constraint(u'fk_draft_slide_secondary_resource_id_resource', 'draft_slide', type_='foreignkey')

    # Migrate Content
    draft_slides = session.query(DraftSlide).all()
    for sl in draft_slides:
        if sl.primary_resource:
            if sl.primary_resource.resource_type.lower() in ['audio', 'video', 'embed']:
                bind.execute("update draft_slide set av_resource_id = " + str(sl.primary_resource_id) + " where id = " + str(sl.id))
            elif sl.primary_resource.resource_type.lower() == 'image':
                bind.execute("update draft_slide set image_resource_id = " + str(sl.primary_resource_id) + " where id = " + str(sl.id))
        if sl.secondary_resource:
            bind.execute("update draft_slide set image_resource_id = " + str(sl.secondary_resource_id) + " where id = " + str(sl.id))

    slides = session.query(Slide).all()
    for sl in slides:
        if sl.primary_resource:
            if sl.primary_resource.resource_type.lower() in ['audio', 'video', 'embed']:
                bind.execute("update slide set av_resource_id = " + str(sl.primary_resource_id) + " where id = " + str(sl.id))
            elif sl.primary_resource.resource_type.lower() == 'image':
                bind.execute("update slide set image_resource_id = " + str(sl.primary_resource_id) + " where id = " + str(sl.id))
        if sl.secondary_resource:
            bind.execute("update slide set image_resource_id = " + str(sl.secondary_resource_id) + " where id = " + str(sl.id))

    op.create_foreign_key(u'slide_av_resource_id_fkey', 'slide', 'resource', ['av_resource_id'], ['id'])
    op.create_foreign_key(u'slide_image_resource_id_fkey', 'slide', 'resource', ['image_resource_id'], ['id'])
    op.create_foreign_key(u'draft_slide_av_resource_id_fkey', 'draft_slide', 'resource', ['av_resource_id'], ['id'])
    op.create_foreign_key(u'draft_slide_image_resource_id_fkey', 'draft_slide', 'resource', ['image_resource_id'], ['id'])

    op.drop_column('slide', 'primary_resource_id')
    op.drop_column('slide', 'secondary_resource_id')
    op.drop_column('draft_slide', 'primary_resource_id')
    op.drop_column('draft_slide', 'secondary_resource_id')
    # end Alembic commands #


def upgrade_reports():
    pass


def downgrade_reports():
    pass
