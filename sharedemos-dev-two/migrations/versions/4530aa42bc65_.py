"""empty message

Revision ID: 4530aa42bc65
Revises: 527ac7ad5cf1
Create Date: 2020-02-18 13:12:59.781930

"""

# revision identifiers, used by Alembic.
revision = '4530aa42bc65'
down_revision = '527ac7ad5cf1'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()


def upgrade_():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'connector',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('uuid', sa.Unicode(), nullable=False),
        sa.Column('platform', sa.Unicode(), nullable=False),
        sa.Column('name', sa.Unicode(), nullable=False),
        sa.Column('site_url', sa.Unicode(), nullable=False),
        sa.Column('root_folder', sa.Unicode(), nullable=False),
        sa.Column('username', sa.Unicode(), nullable=False),
        sa.Column('password', sa.Unicode(), nullable=False),
        sa.Column('client_token', sa.Unicode(), nullable=True),
        sa.Column('sync_enabled', sa.Boolean(), nullable=True),
        sa.Column('notify_enabled', sa.Boolean(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('modified_at', sa.DateTime(), nullable=True),
        sa.Column('created_by', sa.Integer(), nullable=False),
        sa.Column('modified_by', sa.Integer(), nullable=False),
        sa.Column('tenant_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['modified_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###


def downgrade_():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('connector')
    ### end Alembic commands ###


def upgrade_reports():
    pass


def downgrade_reports():
    pass
